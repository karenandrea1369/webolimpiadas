{"version":3,"sources":["scripts/classes/Vector.js","scripts/pages/mirador.js"],"names":["Vector","x","y","vector","newX","newY","Math","sqrt","v2","v1","acos","mult","mag","PI","window","addEventListener","triangle","document","querySelector","trianglePos","counter","interval","event","mousePos","innerWidth","angle","angleBetween","style","transform"],"mappings":";;ACAA;;;;AAEAc,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,YAAI;AAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAjB;AACA,MAAMC,WAAW,GAAG,IAAInB,eAAJ,CAAW,CAAX,EAAc,CAAd,CAApB;AAEA,MAAIoB,OAAO,GAAG,CAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAJ,EAAAA,QAAQ,CAACF,gBAAT,CAA0B,WAA1B,EAAuC,UAACO,KAAD,EAAS;AAC5C,QAAGF,OAAO,GAAGC,QAAV,IAAsB,CAAzB,EAA2B;AACvB,IDXNrB;AACF,ACWQ,UAAIuB,QDXAtB,ACWQ,CDXpB,EAAcC,ACWS,CDXvB,EAAgB,CCWWF,eAAJ,CAAWsB,KAAK,CAACrB,CAAN,GAAWa,MAAM,CAACU,UAAP,GAAkB,CAAxC,EAA4CF,KAAK,CAACpB,CAAN,GAAWY,MAAM,CAACU,UAAP,GAAkB,CAAzE,CAAf;ADXQ,ACYR,UAAMC,KAAK,GAAGF,QAAQ,CAACG,YAAT,CAAsB,IAAI1B,eAAJ,CAAW,CAAX,EAAa,CAAC,CAAd,CAAtB,CAAd,CAHuB,CAIvB;;ADZJ,ACaI,SDbCC,CAAL,ACaOsB,GDbEtB,CAAT,ICae,CAACA,CAAT,GAAY,CAAf,EAAiB;ADZrB,ACaQe,QAAAA,CDbHd,CAAL,GAASA,CAAT,ECagB,CAACyB,KAAT,CAAeC,SAAf,GAA2B,YAAa,CAACH,KAAd,GAAuB,MAAlD;ADZX,ACaQ,OAFD,MAEO;AACHT,QAAAA,QAAQ,CAACW,KAAT,CAAeC,SAAf,GAA2B,YAAYH,KAAZ,GAAoB,MAA/C;AACH;AACJ;WDRL,aAAItB,MAAJ,EAAW;AACP,ACQAiB,IAAAA,MDRIhB,CCQG,GDRC,GAAG,KAAKH,CAAL,GAASE,MAAM,CAACF,CAA3B;AACA,ACQH,GAbD,ODKQI,IAAI,GAAG,KAAKH,CAAL,GAASC,MAAM,CAACD,CAA3B;AACA,ACQP,CArBD,YDae,IAAIF,MAAJ,CAAWI,IAAX,EAAiBC,IAAjB,CAAP;AACH;;;WAQD,aAAIF,MAAJ,EAAW;AACP,UAAIC,IAAI,GAAG,KAAKH,CAAL,GAASE,MAAM,CAACF,CAA3B;AACA,UAAII,IAAI,GAAG,KAAKH,CAAL,GAASC,MAAM,CAACD,CAA3B;AACA,aAAO,IAAIF,MAAJ,CAAWI,IAAX,EAAiBC,IAAjB,CAAP;AACH;;;WAQD,cAAKF,MAAL,EAAY;AACR,UAAIC,IAAI,GAAG,KAAKH,CAAL,GAASE,MAAM,CAACF,CAA3B;AACA,UAAII,IAAI,GAAG,KAAKH,CAAL,GAASC,MAAM,CAACD,CAA3B;AACA,aAAOE,IAAI,GAAGC,IAAd;AACH;;;WAED,eAAK;AACD;AACA,aAAOC,IAAI,CAACC,IAAL,CAAW,KAAKN,CAAL,GAAS,KAAKA,CAAf,GAAmB,KAAKC,CAAL,GAAS,KAAKA,CAA3C,CAAP;AACH;;;WAED,sBAAaM,EAAb,EAAgB;AACZ,UAAIC,EAAE,GAAG,IAAIT,MAAJ,CAAW,KAAKC,CAAhB,EAAkB,KAAKC,CAAvB,CAAT;AACA,aAAOI,IAAI,CAACI,IAAL,CAAUD,EAAE,CAACE,IAAH,CAAQH,EAAR,KAAaC,EAAE,CAACG,GAAH,KAASJ,EAAE,CAACI,GAAH,EAAtB,CAAV,KAA8C,MAAIN,IAAI,CAACO,EAAvD,CAAP;AACH;;;;;;eAGUb","file":"mirador.74a0f5f9.js","sourceRoot":"..\\src","sourcesContent":["class Vector{\r\n    constructor(x,y){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(x, y){\r\n        let newX = this.x + x;\r\n        let newY = this.y + y;\r\n        return new Vector(newX, newY);\r\n    }\r\n\r\n    add(vector){\r\n        let newX = this.x + vector.x;\r\n        let newY = this.y + vector.y;\r\n        return new Vector(newX, newY);\r\n    }\r\n\r\n    sub(x,y){\r\n        let newX = this.x - x;\r\n        let newY = this.y - y;\r\n        return new Vector(newX, newY);\r\n    }\r\n\r\n    sub(vector){\r\n        let newX = this.x - vector.x;\r\n        let newY = this.y - vector.y;\r\n        return new Vector(newX, newY);\r\n    }\r\n\r\n    mult(x,y){\r\n        let newX = this.x * x;\r\n        let newY = this.y * y;\r\n        return newX + newY;\r\n    }\r\n\r\n    mult(vector){\r\n        let newX = this.x * vector.x;\r\n        let newY = this.y * vector.y;\r\n        return newX + newY;\r\n    }\r\n\r\n    mag(){\r\n        //square root\r\n        return Math.sqrt((this.x * this.x)+(this.y * this.y));\r\n    }\r\n\r\n    angleBetween(v2){\r\n        let v1 = new Vector(this.x,this.y);\r\n        return Math.acos(v1.mult(v2)/(v1.mag()*v2.mag())) * (180/Math.PI);\r\n    }\r\n}\r\n\r\nexport default Vector;","import Vector from '../classes/Vector';\r\n\r\nwindow.addEventListener('load', ()=>{\r\n    const triangle = document.querySelector('.triangle');\r\n    const trianglePos = new Vector(0, 0);\r\n\r\n    let counter = 0;\r\n    let interval = 10;\r\n\r\n    document.addEventListener('mousemove', (event)=>{\r\n        if(counter % interval == 0){\r\n            //console.log(event);\r\n            let mousePos = new Vector(event.x - (window.innerWidth/2), event.y - (window.innerWidth/2));\r\n            const angle = mousePos.angleBetween(new Vector(0,-1));\r\n            //console.log(angle);\r\n            if(mousePos.x <0){\r\n                triangle.style.transform = 'rotate(' + (-angle) + 'deg)';\r\n            } else {\r\n                triangle.style.transform = 'rotate(' + angle + 'deg)';\r\n            }\r\n        }\r\n        counter++;\r\n    })\r\n})"]}